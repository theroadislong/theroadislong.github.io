(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,a){},16:function(e,t,a){},17:function(e,t,a){"use strict";a.r(t);var n=a(0),s=a.n(n),i=a(7),o=a.n(i),r=(a(15),a(1)),c=a(2),d=a(4),h=a(3),l=a(5),u=(a(16),function(e){function t(){var e,a;Object(r.a)(this,t);for(var n=arguments.length,s=new Array(n),i=0;i<n;i++)s[i]=arguments[i];return(a=Object(d.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(s)))).state={isOpen:!1},a.clickHandler=function(){a.setState({isOpen:!a.state.isOpen})},a}return Object(l.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e=s.a.createElement("span",{onClick:this.clickHandler,className:"question__title"},this.props.data.question),t=s.a.createElement("span",{onClick:this.clickHandler,className:"question__answer"},this.props.data.answer);return s.a.createElement("div",{className:this.state.isOpen?"question question--opened":"question"},e,this.state.isOpen&&t)}}]),t}(s.a.Component)),p=a(8),m=function(e){function t(){return Object(r.a)(this,t),Object(d.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(l.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return s.a.createElement("div",{className:"app"},p.map(function(e,t){return s.a.createElement(u,{key:t,data:e})}))}}]),t}(s.a.Component);o.a.render(s.a.createElement(m,null),document.getElementById("root"))},8:function(e){e.exports=[{id:1,category:"html",question:"What is HTML5?",answer:"HTML5 contains powerful capabilities for Web-based applications with more powerful interaction, video support, graphics, more styling effects, and a full set of APIs. HTML5 adapts to any device, whether desktop, mobile, tablet, or television."},{id:2,category:"javascript",question:"Can you name two programming paradigms important for JavaScript app developers?",answer:"JavaScript is a multi-paradigm language, supporting imperative/procedural programming along with OOP (Object-Oriented Programming) and functional programming. JavaScript supports OOP with prototypal inheritance."},{id:3,category:"javascript",question:"What are two-way data binding and one-way data flow, and how are they different?",answer:"Two way data binding means that UI fields are bound to model data dynamically such that when a UI field changes, the model data changes with it and vice-versa. One way data flow means that the model is the single source of truth. Changes in the UI trigger messages that signal user intent to the model (or \u201cstore\u201d in React). Only the model has the access to change the app\u2019s state. The effect is that data always flows in a single direction, which makes it easier to understand. One way data flows are deterministic, whereas two-way binding can cause side-effects which are harder to follow and understand."},{id:4,category:"javascript",question:"What is asynchronous programming, and why is it important in JavaScript?",answer:"Asynchronous programming means that the engine runs in an event loop. When a blocking operation is needed, the request is started, and the code keeps running without blocking for the result. When the response is ready, an interrupt is fired, which causes an event handler to be run, where the control flow continues. In this way, a single program thread can handle many concurrent operations."},{id:5,category:"css",question:"What's the difference between 'resetting' and 'normalizing' CSS? Which would you choose, and why?",answer:"Resetting - Resetting is meant to strip all default browser styling on elements. For e.g. margins, paddings, font-sizes of all elements are reset to be the same. You will have to redeclare styling for common typographic elements. Normalizing - Normalizing preserves useful default styles rather than unstyling everything. It also corrects bugs for common browser dependencies. I would choose resetting when I have a very customized or unconventional site design such that I need to do a lot of my own styling and do not need any default styling to be preserved."},{id:7,category:"css",question:"Are you familiar with styling SVG?",answer:"Yes, there are several ways to color shapes (including specifying attributes on the object) using inline CSS, an embedded CSS section, or an external CSS file. Most SVG you'll find around the web use inline CSS, but there are advantages and disadvantages associated with each type. Basic coloring can be done by setting two attributes on the node: fill and stroke. fill sets the color inside the object and stroke sets the color of the line drawn around the object. You can use the same CSS color naming schemes that you use in HTML, whether that's color names (that is red), RGB values (that is rgb(255,0,0)), Hex values, RGBA values, etc."},{id:8,category:"html",question:"What are data- attributes good for?",answer:"Before JavaScript frameworks became popular, front end developers used data- attributes to store extra data within the DOM itself, without other hacks such as non-standard attributes, extra properties on the DOM. It is intended to store custom data private to the page or application, for which there are no more appropriate attributes or elements. These days, using data- attributes is not encouraged. One reason is that users can modify the data attribute easily by using inspect element in the browser. The data model is better stored within JavaScript itself and stay updated with the DOM via data binding possibly through a library or a framework."},{id:9,category:"html",question:"What is progressive rendering?",answer:"Progressive rendering is the name given to techniques used to improve the performance of a webpage (in particular, improve perceived load time) to render content for display as quickly as possible. It used to be much more prevalent in the days before broadband internet but it is still used in modern development as mobile data connections are becoming increasingly popular (and unreliable)! Examples of such techniques: Lazy loading of images - Images on the page are not loaded all at once. JavaScript will be used to load an image when the user scrolls into the part of the page that displays the image. Prioritizing visible content (or above-the-fold rendering) - Include only the minimum CSS/content/scripts necessary for the amount of page that would be rendered in the users browser first to display as quickly as possible, you can then use deferred scripts or listen for the DOMContentLoaded/load event to load in other resources and content. Async HTML fragments - Flushing parts of the HTML to the browser as the page is constructed on the back end. More details on the technique can be found here."},{id:10,category:"javascript",question:"What are the differences between == and ===?",answer:"The simplest way of saying that, == will not check types and === will check whether both sides are of same type. So, == is tolerant. But under the hood it converts to its convenient type to have both in same type and then do the comparison. === compares the types and values. Hence, if both sides are not same type, answer is always false. For example, if you are comparing two strings, they must have identical character sets. For other primitives (number, boolean) must share the same value."}]},9:function(e,t,a){e.exports=a(17)}},[[9,1,2]]]);
//# sourceMappingURL=main.97536b0f.chunk.js.map